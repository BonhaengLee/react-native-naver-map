name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Lint files
        run: yarn lint

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/wrapper
            ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('example/android/gradle/wrapper/gradle-wrapper.properties') }}-lint
          restore-keys: |
            ${{ runner.os }}-gradle-${{matrix.arch}}-lint-

      - name: Codegen
        run: yarn codegen

      - name: Build test
        run: yarn prepare

#  test:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Setup
#        uses: ./.github/actions/setup
#
#      - name: Run unit tests
#        run: yarn test --maxWorkers=2 --coverage

#  build-library:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Setup
#        uses: ./.github/actions/setup
#
#      - name: Build package
#        run: yarn prepare

  build-android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ old, new ]
    env:
      TURBO_CACHE_DIR: .turbo/android-${{matrix.arch}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Cache turborepo for Android
        uses: actions/cache@v4
        with:
          path: ${{ env.TURBO_CACHE_DIR }}
          key: ${{ runner.os }}-turborepo-android-${{ hashFiles('yarn.lock') }}-${{matrix.arch}}
          restore-keys: |
            ${{ runner.os }}-turborepo-android-${{matrix.arch}}-

      - name: Check turborepo cache for Android
        run: |
          TURBO_CACHE_STATUS=$(node -p "($(yarn turbo run ci:android:${{matrix.arch}} --single-package --cache-dir="${{ env.TURBO_CACHE_DIR }}" --dry=json)).tasks.find(t => t.task === 'ci:android:${{matrix.arch}}').cache.status")

          if [[ $TURBO_CACHE_STATUS == "HIT" ]]; then
            echo "turbo_cache_hit=1" >> $GITHUB_ENV
          fi

      - name: Install JDK
        if: env.turbo_cache_hit != 1
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Finalize Android SDK
        if: env.turbo_cache_hit != 1
        run: |
          /bin/bash -c "yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null"

      - name: Cache Gradle
        if: env.turbo_cache_hit != 1
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/wrapper
            ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('example/android/gradle/wrapper/gradle-wrapper.properties') }}-${{matrix.arch}}
          restore-keys: |
            ${{ runner.os }}-gradle-${{matrix.arch}}-

      - name: Build example for Android
        env:
          JAVA_OPTS: "-XX:MaxHeapSize=6g"
        run: yarn turbo:android:${{matrix.arch}}

  build-ios:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [ old, new ]
    env:
      TURBO_CACHE_DIR: .turbo/ios-${{matrix.arch}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Cache turborepo for iOS
        uses: actions/cache@v4
        with:
          path: ${{ env.TURBO_CACHE_DIR }}
          key: ${{ runner.os }}-turborepo-ios-${{ hashFiles('yarn.lock') }}-${{matrix.arch}}
          restore-keys: |
            ${{ runner.os }}-turborepo-ios-${{matrix.arch}}-

      - name: Check turborepo cache for iOS
        run: |
          TURBO_CACHE_STATUS=$(node -p "($(yarn turbo run ci:ios:${{matrix.arch}} --single-package --cache-dir="${{ env.TURBO_CACHE_DIR }}" --dry=json)).tasks.find(t => t.task === 'ci:ios:${{matrix.arch}}').cache.status")

          if [[ $TURBO_CACHE_STATUS == "HIT" ]]; then
            echo "turbo_cache_hit=1" >> $GITHUB_ENV
          fi

      - name: Cache cocoapods
        if: env.turbo_cache_hit != 1
        id: cocoapods-cache
        uses: actions/cache@v4
        with:
          path: |
            **/ios/Pods
            example/ios/build/generated/ios
          key: ${{ runner.os }}-cocoapods-${{ hashFiles('example/ios/Podfile.lock') }}-${{matrix.arch}}-noop
          restore-keys: |
            ${{ runner.os }}-cocoapods-${{matrix.arch}}-

      - name: Install pod for codegen stuffs
        run: yarn pod:${{matrix.arch}}
      - name: Build example for iOS
        run: yarn turbo:ios:${{matrix.arch}}

